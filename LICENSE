This is my final project for embedded systems. It consists in a gas detection system that can prevent fires and/or gas poisoning.
It's based on Arduino, this micro controller takes air quality, temperature and humidity samples to detect a potentially dangerous situation, through
an ESP8266-01 ("Wifi module") it continuoslly sends them over WiFi to a server made in python (based on other personal project "pylogger")
that is running on a raspberry pi, this server stores data in csv format for later analysis and also shows it in real time using thingspeak.

When a dangerous situation is detected the server asks to several IOT cameras for a few photos (this is pretty configurable), then the server sends an email with
the sample values that caused the alarm including wich microcontroller was responsible and attach also the mentioned photos for a better understanding of the situation.

IMPORTANT: There's a configuration readme that explain how to use the server. Arduino configuration must be done with an IDE but its pretty straight forward.

Basic schema
sensors >> Arduino (through serial comms) >> ESP8266 (through WiFi comm) >> server (.py) (in a dangerous situation) >> Camera (analysis) >> Call rescuers

Technologies used:
- Arduino (Mega) as the microcontroller
- Sensors: TMP36GZ (temperature sensor), DHT11 (digital temperature, and humidity sensor), MQ-02 (smoke sensor, it could be replaced by other kind of gas sensor)
- ESP8266 (v-01) as the WiFi module
- Python for the server (built from the ground)
- Raspberry PI 4 as the server (or fog server)
- OpenCV and python for computer vision (person detection)
- IOT camera (I'm using and Andriod smartphone because I had one but ESP32 cam could be used for example or any other iot camera)

Here's the final inform (in spanish) that explain carefully how the system works.

https://docs.google.com/document/d/1KQ12OgGwtq_Dr4XLAycTSCSPfSkMnY5f-GzBhtvvPAE/edit?usp=sharing

ROI - 2020
